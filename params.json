{"name":"django-heroku-memcacheify","body":"# django-heroku-memcacheify\r\n\r\nAutomatic Django memcached configuration on Heroku.\r\n\r\n\r\n![Deploying memcached is easy](https://github.com/rdegges/django-heroku-memcacheify/raw/master/assets/memcacheify.jpg)\r\n\r\n\r\n## Install\r\n\r\nTo install ``django-heroku-memcacheify``, simply run\r\n``pip install django-heroku-memcacheify`` and you'll get the latest version\r\ninstalled automatically.\r\n\r\n\r\n## Usage\r\n\r\nModify your Django ``settings.py`` file, and set:\r\n\r\n``` python\r\nfrom memcacheify import memcacheify\r\n\r\nCACHES = memcacheify()\r\n```\r\n\r\nThat's it.\r\n\r\nAssuming you have a memcache server available to your application on Heroku, it\r\nwill instantly be available. If you have no memcache addon provisioned for your\r\napp, ``memcacheify`` will default to using local memory caching as a backup :)\r\n\r\n\r\n## Heroku Setup\r\n\r\nNow that you've got Django configured to use memcache, all you need to do is\r\ninstall one of the two excellent memcache addons that Heroku provides!\r\n\r\n- [Memcache](https://addons.heroku.com/memcache) - Been around longer, but\r\n  pretty expensive, or\r\n- [MemCachier](https://addons.heroku.com/memcachier) - Newer, less expensive.\r\n\r\nLet's say I want to install the ``memcachier`` addon, I could simply run:\r\n\r\n``` bash\r\n$ heroku addons:add memcachier:25\r\n$ heroku config\r\n...\r\nMEMCACHIER_SERVERS    => memcachier1.example.net\r\nMEMCACHIER_USERNAME   => bobslob\r\nMEMCACHIER_PASSWORD   => l0nGr4ndoMstr1Ngo5strang3CHaR4cteRS\r\n...\r\n```\r\n\r\nThe example above will provision a *free* 25m memcache server for your\r\napplication. Assuming everything worked, ``heroku config``'s output should show\r\nthat you now have 3 new environment variables set.\r\n\r\n\r\n## Testing Your Cache\r\n\r\nIf you don't trust me, and want to make sure your caching is working as\r\nexpected, you may do the following:\r\n\r\n``` bash\r\n$ heroku run python manage.py shell\r\nRunning python manage.py shell attached to terminal... up, run.1\r\nPython 2.7.2 (default, Oct 31 2011, 16:22:04)\r\n[GCC 4.4.3] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n(InteractiveConsole)\r\n>>> from django.core.cache import cache\r\n>>> cache.set('memcache', 'ify!')\r\nTrue\r\n>>> cache.get('memcache')\r\n'ify!'\r\n>>>\r\n```\r\n\r\nAssuming everything is working, you should be able to set and retrieve cache\r\nkeys.\r\n\r\n\r\n## References\r\n\r\nIf you're confused, you should probably read:\r\n\r\n- [Heroku's Getting Started Guide](http://devcenter.heroku.com/articles/django)\r\n- [Heroku's memcache Addon Documentation](https://devcenter.heroku.com/articles/memcache#using_memcache_from_python)\r\n- [Heroku's memcachier Addon Documentation](https://devcenter.heroku.com/articles/memcachier)\r\n\r\n\r\n## Tests\r\n\r\n[![Build Status](https://secure.travis-ci.org/rdegges/django-heroku-memcacheify.png?branch=master)](http://travis-ci.org/rdegges/django-heroku-memcacheify)\r\n\r\nWant to run the tests? No problem:\r\n\r\n``` bash\r\n$ git clone git://github.com/rdegges/django-heroku-memcacheify.git\r\n$ cd django-heroku-memcacheify\r\n$ python setup.py develop\r\n...\r\n$ pip install -r requirements.txt  # Install test dependencies.\r\n$ nosetests\r\n.............\r\n----------------------------------------------------------------------\r\nRan 13 tests in 0.166s\r\n\r\nOK\r\n```\r\n\r\n\r\n## Changelog\r\n\r\nv0.2: 5-22-2012\r\n\r\n    - Adding support for memcachier Heroku addon.\r\n    - Updating documentation.\r\n    - Refactoring implementation for clarity.\r\n    - Adding better tests.\r\n\r\nv0.1: 5-2-2012\r\n\r\n    - Initial release!\r\n","tagline":"Automatic Django memcached configuration on Heroku.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}